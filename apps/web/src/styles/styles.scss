@mixin checkbox {
  @apply bg-gray-50 border-gray-200 dark:(bg-gray-900 border-gray-700) border-2 rounded-lg h-6 w-6 focus:(ring-0 border-gray-200 dark:border-gray-700) hover:border-primary cursor-pointer disabled:opacity-70 disabled:hover:border-gray-200 disabled:hover:dark:border-gray-700 disabled:cursor-default;
  &:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e"),
      linear-gradient(to top right, var(--un-gradient-stops));
    @apply border-transparent dark:border-transparent;
  }
}
@font-face {
  font-family: "NunitoVariable";
  font-style: normal;
  font-display: swap;
  font-weight: 200 1000;
  src: url("/nunito-latin-variable-wghtOnly-normal.woff2") format("woff2");
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F,
    U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
@font-face {
  font-family: "NunitoVariable";
  font-style: normal;
  font-display: swap;
  font-weight: 200 1000;
  src: url("/nunito-latin-ext-variable-wghtOnly-normal.woff2") format("woff2");
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113,
    U+2C60-2C7F, U+A720-A7FF;
}

#side-panel > div {
  height: 100%;
}
.ProseMirror {
  table {
    border-collapse: collapse;
    margin: 0;
    overflow: hidden;
    table-layout: fixed;
    width: 100%;

    td,
    th {
      border: 2px solid #ced4da;
      box-sizing: border-box;
      min-width: 1em;
      padding: 3px 5px;
      position: relative;
      vertical-align: top;

      > * {
        margin-bottom: 0;
      }
    }

    th {
      background-color: #f1f3f5;
      font-weight: bold;
      text-align: left;
      overflow: auto;
      position: relative;
    }

    .selectedCell:after {
      background: rgba(200, 200, 255, 0.4);
      content: "";
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      pointer-events: none;
      position: absolute;
      z-index: 2;
    }

    .column-resize-handle {
      background-color: #adf;
      bottom: -2px;
      position: absolute;
      right: -2px;
      pointer-events: none;
      top: 0;
      width: 4px;
    }

    p {
      margin: 0;
    }
  }
}

.tableWrapper {
  padding: 1rem 0;
  overflow-x: auto;
}

.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}
.prose-editor {
  font-kerning: none;
  :where(h1, h2, h3, h4, h5, h6):not(:where(.not-prose, .not-prose *)) {
    &::before,
    &::before,
    &::before,
    &::before,
    &::before,
    &::before,
    .open-slash-menu > button {
      @apply font-bold dark:bg-gray-900 dark:border-gray-700;
      position: absolute;
      left: -2.5rem;
      background: #f9fafb;
      height: 2rem;
      width: 2rem;
      justify-content: center;
      display: flex;
      align-items: center;
      color: #6b7280;
      border-radius: 25%;
      font-size: 1rem;
      line-height: 1rem;
      text-align: center;
      top: 50%;
      transform: translateY(-50%);
      //border: 2px solid #e5e7eb;
      @apply border-2;
      opacity: 1;
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .open-slash-menu {
    @apply m-0 relative;
    & > button {
      @apply mt-4;
    }
  }
  .open-slash-menu {
    button {
      font-size: 1.25em;
      line-height: 1.25em;
      font-weight: 600;
    }
  }
  :where(h1):not(:where(.not-prose, .not-prose *))::before {
    top: calc(2.25em * 1.25 * 0.5 + 0.25em);
    content: "H1";
  }
  :where(h2):not(:where(.not-prose, .not-prose *))::before {
    top: calc(1.75em * 1.25 * 0.5 + 0.25em);
    content: "H2";
  }

  :where(h3):not(:where(.not-prose, .not-prose *))::before {
    top: calc(1.375em * 1.25 * 0.5 + 0.25em);
    content: "H3";
  }
  :where(h4):not(:where(.not-prose, .not-prose *))::before {
    line-height: 2.1rem;
    &::before {
      top: calc(2.1rem * 0.5);
      content: "H4";
    }
  }
  :where(h5):not(:where(.not-prose, .not-prose *))::before {
    line-height: 2.1rem;
    &::before {
      top: calc(2.1rem * 0.5);
      content: "H5";
    }
  }
  :where(h6):not(:where(.not-prose, .not-prose *))::before {
    font-size: 0.875em;
    line-height: 2.1rem;
    &::before {
      top: calc(2.1rem * 0.5);
      content: "H6";
    }
  }
  :where(ul p, ol p):not(:where(.not-prose, .not-prose *)) {
    @apply m-0;
  }
  :where(ul[data-type="taskList"]):not(:where(.not-prose, .not-prose *)) {
    padding-left: 0rem;
    li {
      padding-left: 0.5rem;
      display: flex !important;
      justify-content: start;
      align-items: start;
      min-height: 1.75em;
      min-width: 1rem;
      label {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 0.5rem;
        min-height: 1.75em;
        input {
          @include checkbox;
        }
      }
      > div {
        min-width: 1rem;
      }
    }
  }
  :where(hr):not(:where(.not-prose, .not-prose *)) {
    @apply rounded-full border  border-gray-200 dark:border-gray-700;
    margin: 1.25rem 0;
    &.ProseMirror-selectednode {
      @apply border border-primary;
    }
  }
}

.form-checkbox {
  @include checkbox;
}
.prose {
  --un-prose-lists: #6b7280;
  --un-prose-hr: #6b7280;
  --un-prose-invert-lists: #9ca3af;
  --un-prose-invert-hr: #9ca3af;

  :where(blockquote):not(:where(.not-prose, .not-prose *)) {
    @apply border-l-3 border-solid border-gray-300 dark:border-gray-700;
  }
  :where(pre, code):not(:where(.not-prose, .not-prose *)) {
    &::before,
    &::after {
      content: "" !important;
    }
    @apply bg-gray-200 text-gray-700 font-medium dark:bg-gray-900 dark:text-gray-300 py-1 px-2 rounded-lg;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace !important;
  }
  .ProseMirror {
    padding-bottom: 8rem;
  }
}
.scrollbar-sm {
  scrollbar-color: #e2e8f0 #f8fafc;
  scrollbar-width: thin;
  &::-webkit-scrollbar {
    @apply w-2 h-2 rounded-lg bg-gray-50 dark:bg-gray-900;
  }
  &::-webkit-scrollbar-thumb {
    @apply bg-gray-200 rounded-lg dark:bg-gray-800;
  }
  &-contrast {
    scrollbar-color: #f8fafc #e2e8f0;
    &::-webkit-scrollbar {
      @apply w-2 h-2 rounded-lg bg-gray-100 dark:bg-gray-800;
    }
    &::-webkit-scrollbar-thumb {
      @apply bg-gray-200 rounded-lg dark:bg-gray-900;
    }
  }
}
.dark {
  .scrollbar-sm {
    scrollbar-color: #1e293b #0f172a;

    &-contrast {
      scrollbar-color: #0f172a #1e293b;
    }
  }
}

::-webkit-scrollbar {
  @apply w-4 bg-white rounded-lg dark:bg-gray-900;
}
::-webkit-scrollbar-thumb {
  @apply bg-gray-200 rounded-lg dark:bg-gray-800;
}
.scrollbar-contrast {
  &::-webkit-scrollbar {
    @apply w-4 rounded-lg bg-gray-100 dark:bg-gray-800;
  }
  &::-webkit-scrollbar-thumb {
    @apply bg-gray-200 rounded-lg dark:bg-gray-900;
  }
}

.narrow-prose {
  :where(p, ul, ol, pre):not(:where(.not-prose, .not-prose *)) {
    line-height: inherit;
    margin: 0;
  }
  :where(blockquote):not(:where(.not-prose, .not-prose *)) {
    margin: 0;
  }
}
